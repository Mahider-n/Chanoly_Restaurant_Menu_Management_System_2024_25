{"version":3,"sources":["api.ts","auth.ts","ui.ts","app.ts","../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"app.c61986b1.js","sourceRoot":"..","sourcesContent":["const BASE_URL = \"http://localhost:3005\";\n\nexport const api = {\n  async login(\n    email: string,\n    password: string,\n  ): Promise<{ access_token: string }> {\n    console.log(\"Attempting login with:\", { email });\n\n    const response = await fetch(`${BASE_URL}/auth/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    });\n\n    if (!response.ok) {\n      console.error(\n        \"Login response not OK:\",\n        response.status,\n        response.statusText,\n      );\n      throw new Error(\"Login failed\");\n    }\n\n    const data = await response.json();\n    console.log(\"Login successful, received token:\", data);\n    return data;\n  },\n\n  async signup(\n    name: string,\n    email: string,\n    password: string,\n  ): Promise<{ access_token: string }> {\n    console.log(\"Attempting signup with:\", { name, email });\n\n    const response = await fetch(`${BASE_URL}/auth/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ name, email, password }),\n    });\n\n    if (!response.ok) {\n      console.error(\n        \"Signup response not OK:\",\n        response.status,\n        response.statusText,\n      );\n      throw new Error(\"Signup failed\");\n    }\n\n    const data = await response.json();\n    console.log(\"Signup successful, received token:\", data);\n    return data;\n  },\n\n  async getMenu(token: string): Promise<any[]> {\n    console.log(\"Fetching menu with token:\", token);\n\n    const response = await fetch(`${BASE_URL}/menu`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    if (!response.ok) {\n      console.error(\"Menu fetch failed:\", response.status, response.statusText);\n      const errorText = await response.text();\n      console.error(\"Error details:\", errorText);\n      throw new Error(errorText || \"Failed to fetch menu\");\n    }\n\n    const res = await response.json();\n    console.log(\"Menu data received:\", res);\n    return res.data;\n  },\n};\n","export class Auth {\n  private static TOKEN_KEY = \"auth_token\";\n\n  static setToken(token: string): void {\n    console.log(\"Setting token in localStorage:\", token);\n    localStorage.setItem(this.TOKEN_KEY, token);\n  }\n\n  static getToken(): string | null {\n    const token = localStorage.getItem(this.TOKEN_KEY);\n    console.log(\"Retrieved token from localStorage:\", token);\n    return token;\n  }\n\n  static removeToken(): void {\n    console.log(\"Removing token from localStorage\");\n    localStorage.removeItem(this.TOKEN_KEY);\n  }\n\n  static isAuthenticated(): boolean {\n    const token = this.getToken();\n    console.log(\"Checking authentication, token exists:\", !!token);\n\n    if (!token) return false;\n\n    try {\n      const payload = JSON.parse(atob(token.split(\".\")[1]));\n      const expires = payload.exp * 1000;\n      const isValid = expires > Date.now();\n      console.log(\"Token validation:\", {\n        expires: new Date(expires),\n        now: new Date(),\n        isValid,\n      });\n      return isValid;\n    } catch (error) {\n      console.error(\"Token validation error:\", error);\n      return false;\n    }\n  }\n}\n","export class UI {\n  static renderAuthForm(): void {\n    const container = document.getElementById(\"auth-container\")!;\n    container.innerHTML = `\n            <div class=\"auth-forms\">\n                <div class=\"form-group\">\n                    <h2>Login</h2>\n                    <form id=\"login-form\">\n                        <div class=\"form-group\">\n                            <label for=\"login-email\">Email:</label>\n                            <input type=\"email\" id=\"login-email\" required>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"login-password\">Password:</label>\n                            <input type=\"password\" id=\"login-password\" required>\n                        </div>\n                        <button type=\"submit\" class=\"btn\">Login</button>\n                    </form>\n                </div>\n                \n                <div class=\"form-group\">\n                    <h2>Signup</h2>\n                    <form id=\"signup-form\">\n                        <div class=\"form-group\">\n                            <label for=\"signup-name\">Name:</label>\n                            <input type=\"text\" id=\"signup-name\" required>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"signup-email\">Email:</label>\n                            <input type=\"email\" id=\"signup-email\" required>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"signup-password\">Password:</label>\n                            <input type=\"password\" id=\"signup-password\" required>\n                        </div>\n                        <button type=\"submit\" class=\"btn\">Signup</button>\n                    </form>\n                </div>\n            </div>\n        `;\n  }\n\n  static renderMenu(items: any[]): void {\n    const container = document.getElementById(\"menu-container\")!;\n    container.innerHTML = `\n            <h2>Restaurant Menu</h2>\n            <button id=\"logout-btn\" class=\"btn\">Logout</button>\n            <div class=\"menu-list\">\n                ${items\n                  .map(\n                    (item) => `\n                    <div class=\"menu-item\">\n                        <h3>${item.name}</h3>\n                        <p>${item.description}</p>\n                        <p>Price: $${item.price}</p>\n                    </div>\n                `,\n                  )\n                  .join(\"\")}\n            </div>\n        `;\n  }\n\n  static showAuthContainer(): void {\n    document.getElementById(\"auth-container\")!.classList.remove(\"hidden\");\n    document.getElementById(\"menu-container\")!.classList.add(\"hidden\");\n  }\n\n  static showMenuContainer(): void {\n    document.getElementById(\"auth-container\")!.classList.add(\"hidden\");\n    document.getElementById(\"menu-container\")!.classList.remove(\"hidden\");\n  }\n}\n","import { api } from \"./api\";\nimport { Auth } from \"./auth\";\nimport { UI } from \"./ui\";\n\nclass App {\n  constructor() {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    if (Auth.isAuthenticated()) {\n      this.loadMenu();\n    } else {\n      this.loadAuth();\n    }\n    this.setupEventListeners();\n  }\n\n  private async loadMenu(): Promise<void> {\n    try {\n      const token = Auth.getToken()!;\n      const menuItems = await api.getMenu(token);\n      UI.renderMenu(menuItems);\n      UI.showMenuContainer();\n    } catch (error) {\n      console.error(\"Failed to load menu:\", error);\n      Auth.removeToken();\n      this.loadAuth();\n    }\n  }\n\n  private loadAuth(): void {\n    UI.renderAuthForm();\n    UI.showAuthContainer();\n  }\n\n  private setupEventListeners(): void {\n    document.addEventListener(\"submit\", async (e) => {\n      e.preventDefault();\n      const target = e.target as HTMLFormElement;\n\n      if (target.id === \"login-form\") {\n        await this.handleLogin(target);\n      } else if (target.id === \"signup-form\") {\n        await this.handleSignup(target);\n      }\n    });\n\n    document.addEventListener(\"click\", (e) => {\n      const target = e.target as HTMLElement;\n      if (target.id === \"logout-btn\") {\n        this.handleLogout();\n      }\n    });\n  }\n\n  private async handleLogin(form: HTMLFormElement): Promise<void> {\n    const email = (form.querySelector(\"#login-email\") as HTMLInputElement)\n      .value;\n    const password = (form.querySelector(\"#login-password\") as HTMLInputElement)\n      .value;\n\n    try {\n      const { access_token } = await api.login(email, password);\n      Auth.setToken(access_token);\n      this.loadMenu();\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      alert(\"Login failed. Please try again.\");\n    }\n  }\n\n  private async handleSignup(form: HTMLFormElement): Promise<void> {\n    const name = (form.querySelector(\"#signup-name\") as HTMLInputElement).value;\n    const email = (form.querySelector(\"#signup-email\") as HTMLInputElement)\n      .value;\n    const password = (\n      form.querySelector(\"#signup-password\") as HTMLInputElement\n    ).value;\n\n    try {\n      const { access_token } = await api.signup(name, email, password);\n      Auth.setToken(access_token);\n      this.loadMenu();\n    } catch (error) {\n      console.error(\"Signup failed:\", error);\n      alert(\"Signup failed. Please try again.\");\n    }\n  }\n\n  private handleLogout(): void {\n    Auth.removeToken();\n    this.loadAuth();\n  }\n}\n\nnew App();\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}