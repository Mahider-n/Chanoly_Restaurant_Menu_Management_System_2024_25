{"mappings":"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","sources":["<anon>","app.ts","api.ts","auth.ts","ui.ts"],"sourcesContent":["const $257d73db9a0e6cb3$var$BASE_URL = \"http://localhost:3000\";\nconst $257d73db9a0e6cb3$export$644d8ea042df96a6 = {\n    async login (email, password) {\n        console.log(\"Attempting login with:\", {\n            email: email\n        });\n        const response = await fetch(`${$257d73db9a0e6cb3$var$BASE_URL}/auth/login`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email: email,\n                password: password\n            })\n        });\n        if (!response.ok) {\n            console.error(\"Login response not OK:\", response.status, response.statusText);\n            throw new Error(\"Login failed\");\n        }\n        const data = await response.json();\n        console.log(\"Login successful, received token:\", data);\n        return data;\n    },\n    async getMenu (token) {\n        console.log(\"Fetching menu with token:\", token);\n        const response = await fetch(`${$257d73db9a0e6cb3$var$BASE_URL}/menu`, {\n            method: \"GET\",\n            headers: {\n                Authorization: `Bearer ${token}`,\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        if (!response.ok) {\n            console.error(\"Menu fetch failed:\", response.status, response.statusText);\n            const errorText = await response.text();\n            console.error(\"Error details:\", errorText);\n            throw new Error(errorText || \"Failed to fetch menu\");\n        }\n        const res = await response.json();\n        console.log(\"Menu data received:\", res);\n        return res.data;\n    }\n};\n\n\nclass $c4ae5bd63c672a46$export$334c29725a78c21d {\n    static{\n        this.TOKEN_KEY = \"auth_token\";\n    }\n    static setToken(token) {\n        console.log(\"Setting token in localStorage:\", token);\n        localStorage.setItem(this.TOKEN_KEY, token);\n    }\n    static getToken() {\n        const token = localStorage.getItem(this.TOKEN_KEY);\n        console.log(\"Retrieved token from localStorage:\", token);\n        return token;\n    }\n    static removeToken() {\n        console.log(\"Removing token from localStorage\");\n        localStorage.removeItem(this.TOKEN_KEY);\n    }\n    static isAuthenticated() {\n        const token = this.getToken();\n        console.log(\"Checking authentication, token exists:\", !!token);\n        if (!token) return false;\n        try {\n            const payload = JSON.parse(atob(token.split(\".\")[1]));\n            const expires = payload.exp * 1000;\n            const isValid = expires > Date.now();\n            console.log(\"Token validation:\", {\n                expires: new Date(expires),\n                now: new Date(),\n                isValid: isValid\n            });\n            return isValid;\n        } catch (error) {\n            console.error(\"Token validation error:\", error);\n            return false;\n        }\n    }\n}\n\n\nclass $205c0c276c902f46$export$4b08aed5f1ec6952 {\n    static renderAuthForm() {\n        const container = document.getElementById(\"auth-container\");\n        container.innerHTML = `\n            <div class=\"auth-forms\">\n                <div class=\"form-group\">\n                    <h2>Login</h2>\n                    <form id=\"login-form\">\n                        <div class=\"form-group\">\n                            <label for=\"login-email\">Email:</label>\n                            <input type=\"email\" id=\"login-email\" required>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"login-password\">Password:</label>\n                            <input type=\"password\" id=\"login-password\" required>\n                        </div>\n                        <button type=\"submit\" class=\"btn\">Login</button>\n                    </form>\n                </div>\n                \n                <div class=\"form-group\">\n                    <h2>Signup</h2>\n                    <form id=\"signup-form\">\n                        <div class=\"form-group\">\n                            <label for=\"signup-email\">Email:</label>\n                            <input type=\"email\" id=\"signup-email\" required>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"signup-password\">Password:</label>\n                            <input type=\"password\" id=\"signup-password\" required>\n                        </div>\n                        <button type=\"submit\" class=\"btn\">Signup</button>\n                    </form>\n                </div>\n            </div>\n        `;\n    }\n    static renderMenu(items) {\n        const container = document.getElementById(\"menu-container\");\n        console.log(\"Rendering ---------------menu items:\", items);\n        container.innerHTML = `\n            <h2>Restaurant Menu</h2>\n            <button id=\"logout-btn\" class=\"btn\">Logout</button>\n            <div class=\"menu-list\">\n                ${items.map((item)=>`\n                    <div class=\"menu-item\">\n                        <h3>${item.name}</h3>\n                        <p>${item.description}</p>\n                        <p>Price: $${item.price}</p>\n                    </div>\n                `).join(\"\")}\n            </div>\n        `;\n    }\n    static showAuthContainer() {\n        document.getElementById(\"auth-container\").classList.remove(\"hidden\");\n        document.getElementById(\"menu-container\").classList.add(\"hidden\");\n    }\n    static showMenuContainer() {\n        document.getElementById(\"auth-container\").classList.add(\"hidden\");\n        document.getElementById(\"menu-container\").classList.remove(\"hidden\");\n    }\n}\n\n\nclass $de9db17bbab00a4e$var$App {\n    constructor(){\n        this.initialize();\n    }\n    initialize() {\n        if ((0, $c4ae5bd63c672a46$export$334c29725a78c21d).isAuthenticated()) this.loadMenu();\n        else this.loadAuth();\n        this.setupEventListeners();\n    }\n    async loadMenu() {\n        try {\n            const token = (0, $c4ae5bd63c672a46$export$334c29725a78c21d).getToken();\n            const menuItems = await (0, $257d73db9a0e6cb3$export$644d8ea042df96a6).getMenu(token);\n            (0, $205c0c276c902f46$export$4b08aed5f1ec6952).renderMenu(menuItems);\n            (0, $205c0c276c902f46$export$4b08aed5f1ec6952).showMenuContainer();\n        } catch (error) {\n            console.error(\"Failed to load menu:\", error);\n            (0, $c4ae5bd63c672a46$export$334c29725a78c21d).removeToken();\n            this.loadAuth();\n        }\n    }\n    loadAuth() {\n        (0, $205c0c276c902f46$export$4b08aed5f1ec6952).renderAuthForm();\n        (0, $205c0c276c902f46$export$4b08aed5f1ec6952).showAuthContainer();\n    }\n    setupEventListeners() {\n        document.addEventListener(\"submit\", async (e)=>{\n            e.preventDefault();\n            const target = e.target;\n            if (target.id === \"login-form\") await this.handleLogin(target);\n            else if (target.id === \"signup-form\") await this.handleSignup(target);\n        });\n        document.addEventListener(\"click\", (e)=>{\n            const target = e.target;\n            if (target.id === \"logout-btn\") this.handleLogout();\n        });\n    }\n    async handleLogin(form) {\n        const email = form.querySelector(\"#login-email\").value;\n        const password = form.querySelector(\"#login-password\").value;\n        try {\n            const { access_token: access_token } = await (0, $257d73db9a0e6cb3$export$644d8ea042df96a6).login(email, password);\n            (0, $c4ae5bd63c672a46$export$334c29725a78c21d).setToken(access_token);\n            this.loadMenu();\n        } catch (error) {\n            console.error(\"Login failed:\", error);\n            alert(\"Login failed. Please try again.\");\n        }\n    }\n    async handleSignup(form) {\n        const email = form.querySelector(\"#signup-email\").value;\n        const password = form.querySelector(\"#signup-password\").value;\n        try {\n            const { access_token: access_token } = await (0, $257d73db9a0e6cb3$export$644d8ea042df96a6).signup(email, password);\n            (0, $c4ae5bd63c672a46$export$334c29725a78c21d).setToken(access_token);\n            this.loadMenu();\n        } catch (error) {\n            console.error(\"Signup failed:\", error);\n            alert(\"Signup failed. Please try again.\");\n        }\n    }\n    handleLogout() {\n        (0, $c4ae5bd63c672a46$export$334c29725a78c21d).removeToken();\n        this.loadAuth();\n    }\n}\nnew $de9db17bbab00a4e$var$App();\n\n\n//# sourceMappingURL=index.5956f39b.js.map\n","import { api } from \"./api\";\nimport { Auth } from \"./auth\";\nimport { UI } from \"./ui\";\n\nclass App {\n  constructor() {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    if (Auth.isAuthenticated()) {\n      this.loadMenu();\n    } else {\n      this.loadAuth();\n    }\n    this.setupEventListeners();\n  }\n\n  private async loadMenu(): void {\n    try {\n      const token = Auth.getToken()!;\n      const menuItems = await api.getMenu(token);\n      UI.renderMenu(menuItems);\n      UI.showMenuContainer();\n    } catch (error) {\n      console.error(\"Failed to load menu:\", error);\n      Auth.removeToken();\n      this.loadAuth();\n    }\n  }\n\n  private loadAuth(): void {\n    UI.renderAuthForm();\n    UI.showAuthContainer();\n  }\n\n  private setupEventListeners(): void {\n    document.addEventListener(\"submit\", async (e) => {\n      e.preventDefault();\n      const target = e.target as HTMLFormElement;\n\n      if (target.id === \"login-form\") {\n        await this.handleLogin(target);\n      } else if (target.id === \"signup-form\") {\n        await this.handleSignup(target);\n      }\n    });\n\n    document.addEventListener(\"click\", (e) => {\n      const target = e.target as HTMLElement;\n      if (target.id === \"logout-btn\") {\n        this.handleLogout();\n      }\n    });\n  }\n\n  private async handleLogin(form: HTMLFormElement): Promise<void> {\n    const email = (form.querySelector(\"#login-email\") as HTMLInputElement)\n      .value;\n    const password = (form.querySelector(\"#login-password\") as HTMLInputElement)\n      .value;\n\n    try {\n      const { access_token } = await api.login(email, password);\n      Auth.setToken(access_token);\n      this.loadMenu();\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      alert(\"Login failed. Please try again.\");\n    }\n  }\n\n  private async handleSignup(form: HTMLFormElement): Promise<void> {\n    const email = (form.querySelector(\"#signup-email\") as HTMLInputElement)\n      .value;\n    const password = (\n      form.querySelector(\"#signup-password\") as HTMLInputElement\n    ).value;\n\n    try {\n      const { access_token } = await api.signup(email, password);\n      Auth.setToken(access_token);\n      this.loadMenu();\n    } catch (error) {\n      console.error(\"Signup failed:\", error);\n      alert(\"Signup failed. Please try again.\");\n    }\n  }\n\n  private handleLogout(): void {\n    Auth.removeToken();\n    this.loadAuth();\n  }\n}\n\nnew App();\n","const BASE_URL = \"http://localhost:3000\";\n\nexport const api = {\n  async login(\n    email: string,\n    password: string,\n  ): Promise<{ access_token: string }> {\n    console.log(\"Attempting login with:\", { email });\n\n    const response = await fetch(`${BASE_URL}/auth/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    });\n\n    if (!response.ok) {\n      console.error(\n        \"Login response not OK:\",\n        response.status,\n        response.statusText,\n      );\n      throw new Error(\"Login failed\");\n    }\n\n    const data = await response.json();\n    console.log(\"Login successful, received token:\", data);\n    return data;\n  },\n\n  async getMenu(token: string): Promise<any[]> {\n    console.log(\"Fetching menu with token:\", token);\n\n    const response = await fetch(`${BASE_URL}/menu`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    if (!response.ok) {\n      console.error(\"Menu fetch failed:\", response.status, response.statusText);\n      const errorText = await response.text();\n      console.error(\"Error details:\", errorText);\n      throw new Error(errorText || \"Failed to fetch menu\");\n    }\n\n    const res = await response.json();\n    console.log(\"Menu data received:\", res);\n    return res.data;\n  },\n};\n","export class Auth {\n  private static TOKEN_KEY = \"auth_token\";\n\n  static setToken(token: string): void {\n    console.log(\"Setting token in localStorage:\", token);\n    localStorage.setItem(this.TOKEN_KEY, token);\n  }\n\n  static getToken(): string | null {\n    const token = localStorage.getItem(this.TOKEN_KEY);\n    console.log(\"Retrieved token from localStorage:\", token);\n    return token;\n  }\n\n  static removeToken(): void {\n    console.log(\"Removing token from localStorage\");\n    localStorage.removeItem(this.TOKEN_KEY);\n  }\n\n  static isAuthenticated(): boolean {\n    const token = this.getToken();\n    console.log(\"Checking authentication, token exists:\", !!token);\n\n    if (!token) return false;\n\n    try {\n      const payload = JSON.parse(atob(token.split(\".\")[1]));\n      const expires = payload.exp * 1000;\n      const isValid = expires > Date.now();\n      console.log(\"Token validation:\", {\n        expires: new Date(expires),\n        now: new Date(),\n        isValid,\n      });\n      return isValid;\n    } catch (error) {\n      console.error(\"Token validation error:\", error);\n      return false;\n    }\n  }\n}\n","export class UI {\n  static renderAuthForm(): void {\n    const container = document.getElementById(\"auth-container\")!;\n    container.innerHTML = `\n            <div class=\"auth-forms\">\n                <div class=\"form-group\">\n                    <h2>Login</h2>\n                    <form id=\"login-form\">\n                        <div class=\"form-group\">\n                            <label for=\"login-email\">Email:</label>\n                            <input type=\"email\" id=\"login-email\" required>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"login-password\">Password:</label>\n                            <input type=\"password\" id=\"login-password\" required>\n                        </div>\n                        <button type=\"submit\" class=\"btn\">Login</button>\n                    </form>\n                </div>\n                \n                <div class=\"form-group\">\n                    <h2>Signup</h2>\n                    <form id=\"signup-form\">\n                        <div class=\"form-group\">\n                            <label for=\"signup-email\">Email:</label>\n                            <input type=\"email\" id=\"signup-email\" required>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"signup-password\">Password:</label>\n                            <input type=\"password\" id=\"signup-password\" required>\n                        </div>\n                        <button type=\"submit\" class=\"btn\">Signup</button>\n                    </form>\n                </div>\n            </div>\n        `;\n  }\n\n  static renderMenu(items: any[]): void {\n    const container = document.getElementById(\"menu-container\")!;\n    console.log(\"Rendering ---------------menu items:\", items);\n    container.innerHTML = `\n            <h2>Restaurant Menu</h2>\n            <button id=\"logout-btn\" class=\"btn\">Logout</button>\n            <div class=\"menu-list\">\n                ${items\n                  .map(\n                    (item) => `\n                    <div class=\"menu-item\">\n                        <h3>${item.name}</h3>\n                        <p>${item.description}</p>\n                        <p>Price: $${item.price}</p>\n                    </div>\n                `,\n                  )\n                  .join(\"\")}\n            </div>\n        `;\n  }\n\n  static showAuthContainer(): void {\n    document.getElementById(\"auth-container\")!.classList.remove(\"hidden\");\n    document.getElementById(\"menu-container\")!.classList.add(\"hidden\");\n  }\n\n  static showMenuContainer(): void {\n    document.getElementById(\"auth-container\")!.classList.add(\"hidden\");\n    document.getElementById(\"menu-container\")!.classList.remove(\"hidden\");\n  }\n}\n"],"names":["$257d73db9a0e6cb3$var$BASE_URL","$257d73db9a0e6cb3$export$644d8ea042df96a6","login","email","password","console","log","response","fetch","method","headers","body","JSON","stringify","ok","error","status","statusText","Error","data","json","getMenu","token","Authorization","errorText","text","res","$c4ae5bd63c672a46$export$334c29725a78c21d","TOKEN_KEY","setToken","localStorage","setItem","getToken","getItem","removeToken","removeItem","isAuthenticated","payload","parse","atob","split","expires","exp","isValid","Date","now","$205c0c276c902f46$export$4b08aed5f1ec6952","renderAuthForm","container","document","getElementById","innerHTML","renderMenu","items","map","item","name","description","price","join","showAuthContainer","classList","remove","add","showMenuContainer","constructor","initialize","loadMenu","loadAuth","setupEventListeners","menuItems","addEventListener","e","preventDefault","target","id","handleLogin","handleSignup","handleLogout","form","querySelector","value","access_token","alert","signup"],"version":3,"file":"index.5956f39b.js.map"}